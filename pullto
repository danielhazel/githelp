#!/bin/bash
HERE=$(dirname ${BASH_SOURCE[0]})
. ${HERE}/fixpath

if ! checkDANKEY ; then
    exit 1
fi

if ! allcommitted ; then
    >&2 echo "Local status is not safe enough to run this command."
    exit 1
fi

if [ "$#" -lt 1 ] ; then
    echo Usage: $0 targetbranch
    exit 1
fi

target=$1
currentbranch=$(branch)

if ! branchexists "$target" ; then
    if branchexists -r origin/$target ; then
        git checkout -b $target origin/$target
        git checkout $currentbranch
    fi
fi
if ! branchexists $target ; then
    >&2 echo no branch found: $target
    exit 1
fi

if git merge-base $(branch) --is-ancestor $target ; then
    echo This branch has already been merged to $target
    exit 1
fi

aborted=notaborted
career=nocareer

if [ $aborted != aborted ] ; then
    echo Testing the pull request will not be blocked by conflicts ...
    # Generate a safe branch off the target and merge into it
    preparebranchforpullrequest.sh $target | tee /tmp/preparebranchforpullrequest$$
    if [ "${PIPESTATUS[0]}" = "1" ] ; then
        aborted=aborted
    else
        if grep '^USER REQUESTED CAREER TO END' /tmp/preparebranchforpullrequest$$ > /dev/null 2>&1 ; then
            career=career
        fi
    fi
fi
\rm /tmp/preparebranchforpullrequest$$

if [ $aborted != aborted ] ; then
    # create a pull request on bitbucket from that safe branch to the target
    if [ $career = career ] ; then
        if ! ( yes | createpullrequest $target ) ; then
            aborted=aborted
        fi
    elif ! createpullrequest $target ; then
        aborted=aborted
    fi
fi

if [ $aborted != aborted ] ; then
    # merge that pull request no-ff
    if [ $career = career ] ; then
        if ! ( yes | mergepullrequest $target --strategyId=no-ff ) ; then
            aborted=aborted
        fi
    elif ! mergepullrequest $target --strategyId=no-ff ; then
        aborted=aborted
    fi
fi

# delete staging branches
runCleanup.sh
